Please answer the below Data Structure Questions:

why do we need data structure?
A. We need data structures in computer science and programming for two main reasons, like
   organization and efficient access. Data structures help us organize and manage data in a
   structured way. They provide a way to store, manipulate, and retrieve data effectively.


What are the various operations that can be performed on different Data Structures?
  Different data structures support various operations, and the choice of data structure depends
  on the specific operations you need to perform efficiently. LIke arrays, lists, stacks and queues.


List out the areas in which data structures are applied extensively?
  Data structures are used extensively in the following areas. Such as Computer Programming,
  Databases, Operating Systems, Web Development and Networking etc.


what is an Array?
  An array is a data structure used in computer programming to store a collection of items
  (such as numbers, words, or other values) in a single variable.


what is the difference between the Array and ArrayList?
  The main difference between an Array and an ArrayList is their flexibility and functionality.
  An array is a fixed-size data structure that can hold elements of the same data type.
  While An ArrayList is a dynamic and resizable data structure that can hold elements of any data type.


what is LinkedList?
  A linked list is a data structure used in computer science and programming for organizing and storing
  a collection of elements, often referred to as node.


How is an Array different from Linked List?
  An array and a linked list are two common data structures, and they have some key differences.
  An array is a contiguous block of memory where elements are stored in adjacent locations.
  While A linked list consists of nodes where each node contains data and a reference to the next node
  in the sequence.


what is queue?
  queue is a data structure that works like a line of people waiting for something. It follows the
  first in, first out (FIFO) principle, which means that the first item added to the queue is the
  first one to be removed.


what is stack?
  Stack is a data structure that works like a stack of items in the real world, such as a stack of plates.


what is FIFO and LIFO?
  FIFO (First-In, First-Out) is a method of inventory valuation that assumes that the first items (or units)
  added to inventory are the first ones sold. While IFO is a method of inventory valuation that assumes that
  the most recently acquired or produced items are the first ones sold.


what is the order of complexity?
  The order of complexity is a way to analyze and describe how the running time or resource usage of an
  algorithm grows as the input size increases.


what is the best case to search an element from an array?
  The best-case scenario for searching an element in an array occurs when the element you're looking for is
  located at the very beginning of the array.


what is the worst case to search an element from an array?
  the worst-case scenario for searching for an element in an array occurs when the element you're looking for is
  not in the array, or it's located at the very end of the array.


what is tree in data structure?
what is graph in data structure?
what is the difference between the HashTable and HashMap?
What are the major data structures used in the following areas : RDBMS, Network data model and Hierarchical data model.
How HashMap works in java?
What is ArrayIndexOutOfBoundsException in java? When it occurs?
What are the different ways of copying an array into another array?
What is difference between an array and a linked list?
What is DFS and BFS?
What is Recursion?
What are linear and non linear data Structures?
What is Big-(O)-annotation?
Outlined different kind of sorting algorithm with time complexity?

Draw a table with time complexity in which it will summarize all the data structure feature's advantages and disadvantages.
  a)In terms of Accessing element.
  b)In terms of Inserting element.
  c)In terms of Searching element.
  d)In terms of Removing element.


